<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<xs:schema xmlns="http://www.kanejin.cn/schema/webop"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           targetNamespace="http://www.kanejin.cn/schema/webop"
           elementFormDefault="qualified">

    <xs:complexType name="paramType">
        <xs:annotation>
            <xs:documentation>

                初始化Step时的初始参数

                Used in: init-params

            </xs:documentation>
        </xs:annotation>

        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="value" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:simpleType name="forwardTypeType">
        <xs:annotation>
            <xs:documentation>

                forward的文件类型，可以是jsp和freemarker

                Used in: forward

            </xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:enumeration value="jsp"/>
            <xs:enumeration value="freemarker"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="nextActionType"/>
    <xs:complexType name="stepActionType">
        <xs:attribute name="id" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="forwardActionType">
        <xs:attribute name="type" type="forwardTypeType"/>
        <xs:attribute name="page" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="redirectActionType">
        <xs:attribute name="page" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="operationActionType">
        <xs:attribute name="uri" type="xs:string" use="required"/>
        <xs:attribute name="params" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="attributeActionType">
        <xs:attribute name="attr" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="textActionType">
        <xs:attribute name="value" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="jsonActionType">
        <xs:attribute name="attr" type="xs:string" use="required"/>
        <xs:attribute name="converter" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="jsonpActionType">
        <xs:attribute name="attr" type="xs:string" use="required"/>
        <xs:attribute name="callback" type="xs:string"/>
        <xs:attribute name="converter" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="scriptActionType">
        <xs:attribute name="attr" type="xs:string" use="required"/>
        <xs:attribute name="converter" type="xs:string"/>
    </xs:complexType>
    <xs:complexType name="xmlActionType">
        <xs:attribute name="attr" type="xs:string" use="required"/>
        <xs:attribute name="converter" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="responseActionType">
        <xs:attribute name="status" type="xs:string" use="required"/>
    </xs:complexType>
    <xs:complexType name="backActionType"/>
    <xs:complexType name="errorActionType"/>

    <xs:complexType name="ifType">
        <xs:choice>
            <xs:element name="next" type="nextActionType"/>
            <xs:element name="step" type="stepActionType"/>
            <xs:element name="forward" type="forwardActionType"/>
            <xs:element name="redirect" type="redirectActionType"/>
            <xs:element name="operation" type="operationActionType"/>
            <xs:element name="attribute" type="attributeActionType"/>
            <xs:element name="text" type="textActionType"/>
            <xs:element name="json" type="jsonActionType"/>
            <xs:element name="jsonp" type="jsonpActionType"/>
            <xs:element name="script" type="scriptActionType"/>
            <xs:element name="xml" type="xmlActionType"/>
            <xs:element name="response" type="responseActionType"/>
            <xs:element name="back" type="backActionType"/>
            <xs:element name="error" type="errorActionType"/>
        </xs:choice>
        <xs:attribute name="return" type="xs:int"/>
    </xs:complexType>

    <xs:complexType name="elseType">
        <xs:choice>
            <xs:element name="next" type="nextActionType"/>
            <xs:element name="step" type="stepActionType"/>
            <xs:element name="forward" type="forwardActionType"/>
            <xs:element name="redirect" type="redirectActionType"/>
            <xs:element name="operation" type="operationActionType"/>
            <xs:element name="attribute" type="attributeActionType"/>
            <xs:element name="text" type="textActionType"/>
            <xs:element name="json" type="jsonActionType"/>
            <xs:element name="jsonp" type="jsonpActionType"/>
            <xs:element name="script" type="scriptActionType"/>
            <xs:element name="xml" type="xmlActionType"/>
            <xs:element name="response" type="responseActionType"/>
            <xs:element name="back" type="backActionType"/>
            <xs:element name="error" type="errorActionType"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="initParamsType">
        <xs:sequence>
            <xs:element name="param" type="paramType" maxOccurs="unbounded"/>
        </xs:sequence>
    </xs:complexType>

    <xs:complexType name="returnActionType">
        <xs:annotation>
            <xs:documentation>

                根据Step的返回值，执行对应的操作

                Used in: step

            </xs:documentation>
        </xs:annotation>

        <xs:choice>
            <xs:sequence>
                <xs:element name="if" type="ifType" maxOccurs="5"/>
                <xs:element name="else" type="elseType"/>
            </xs:sequence>
            <xs:choice>
                <xs:element name="forward" type="forwardActionType"/>
                <xs:element name="redirect" type="redirectActionType"/>
                <xs:element name="operation" type="operationActionType"/>
                <xs:element name="attribute" type="attributeActionType"/>
                <xs:element name="text" type="textActionType"/>
                <xs:element name="json" type="jsonActionType"/>
                <xs:element name="jsonp" type="jsonpActionType"/>
                <xs:element name="script" type="scriptActionType"/>
                <xs:element name="xml" type="xmlActionType"/>
                <xs:element name="response" type="responseActionType"/>
                <xs:element name="back" type="backActionType"/>
                <xs:element name="error" type="errorActionType"/>
            </xs:choice>

        </xs:choice>
    </xs:complexType>


    <xs:complexType name="stepType">
        <xs:sequence>
            <xs:element name="init-params" type="initParamsType" minOccurs="0"/>
            <xs:element name="return-action" type="returnActionType"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="class" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="operationInterceptorType">
        <xs:attribute name="ref" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:simpleType name="timeUnitType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="millis"/>
            <xs:enumeration value="seconds"/>
            <xs:enumeration value="minutes"/>
            <xs:enumeration value="hours"/>
            <xs:enumeration value="days"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:complexType name="expiryTimeType">
        <xs:simpleContent>
            <xs:extension base="xs:positiveInteger">
                <xs:attribute name="unit" type="timeUnitType" default="seconds"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="eternalType"/>

    <xs:complexType name="expiryType">
        <xs:annotation>
            <xs:documentation>

                缓存过期时间

                eternal: 永不过期
                ttl: time to live, 缓存存活时间
                tti: time to idle, 缓存空闲时间

                Used in: cache

            </xs:documentation>
        </xs:annotation>

        <xs:choice>
            <xs:element name="ttl" type="expiryTimeType"/>
            <xs:element name="tti" type="expiryTimeType"/>
            <xs:element name="eternal" type="eternalType"/>
        </xs:choice>

    </xs:complexType>


    <xs:complexType name="operationCacheType">
        <xs:annotation>
            <xs:documentation>

                定义Operation的缓存

                Used in: operation

            </xs:documentation>
        </xs:annotation>

        <xs:sequence>
            <xs:element name="expiry" type="expiryType" minOccurs="0"/>
            <xs:element name="key-field" type="xs:string" minOccurs="0" maxOccurs="unbounded">
                <xs:annotation>
                    <xs:documentation>
                        缓存key生成时所用的参数
                    </xs:documentation>
                </xs:annotation>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <xs:simpleType name="httpMethodType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="GET"/>
            <xs:enumeration value="POST"/>
        </xs:restriction>
    </xs:simpleType>

    <xs:simpleType name="operationMethodType">
        <xs:list itemType="httpMethodType"/>
    </xs:simpleType>

    <xs:complexType name="operationType">
        <xs:sequence>
            <xs:element name="description" type="xs:string" minOccurs="0"/>
            <xs:element name="cache" type="operationCacheType" minOccurs="0"/>
            <xs:element name="interceptor" type="operationInterceptorType" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="step" type="stepType" maxOccurs="unbounded"/>
        </xs:sequence>
        <xs:attribute name="uri" type="xs:string" use="required"/>
        <xs:attribute name="method" type="operationMethodType"/>
        <xs:attribute name="name" type="xs:string"/>
    </xs:complexType>

    <xs:complexType name="interceptorType">
        <xs:sequence>
            <xs:element name="description" type="xs:string" minOccurs="0"/>
            <xs:element name="init-params" type="initParamsType" minOccurs="0"/>
        </xs:sequence>
        <xs:attribute name="id" type="xs:string" use="required"/>
        <xs:attribute name="class" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="jspRendererType">
        <xs:annotation>
            <xs:documentation>JSP页面渲染器配置</xs:documentation>
        </xs:annotation>
        <xs:all>
            <xs:element name="prefix" type="xs:string" minOccurs="0"/>
            <xs:element name="suffix" type="xs:string" minOccurs="0"/>
            <xs:element name="content-type" type="xs:string" minOccurs="0"/>
        </xs:all>
    </xs:complexType>

    <xs:complexType name="propType">
        <xs:annotation>
            <xs:documentation>Properties项的配置</xs:documentation>
        </xs:annotation>

        <xs:simpleContent>
            <xs:extension base="xs:string">
                <xs:attribute name="key" type="xs:string" use="required"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:complexType name="propsType">
        <xs:annotation>
            <xs:documentation>定义Properties</xs:documentation>
        </xs:annotation>
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="prop" type="propType"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="settingsType">
        <xs:annotation>
            <xs:documentation>Freemarker配置</xs:documentation>
        </xs:annotation>
        <xs:choice>
            <xs:element name="props-file" type="xs:string"/>
            <xs:element name="props" type="propsType"/>
        </xs:choice>
    </xs:complexType>

    <xs:complexType name="freemarkerRendererType">
        <xs:annotation>
            <xs:documentation>Freemarker的渲染器</xs:documentation>
        </xs:annotation>
        <xs:all>
            <xs:element name="prefix" type="xs:string" minOccurs="0"/>
            <xs:element name="suffix" type="xs:string" minOccurs="0"/>
            <xs:element name="content-type" type="xs:string" minOccurs="0"/>
            <xs:element name="template-path" type="xs:string" minOccurs="0"/>
            <xs:element name="no-cache" type="xs:boolean" minOccurs="0"/>
            <xs:element name="buffer-size" type="xs:integer" minOccurs="0"/>
            <xs:element name="exception-on-missing-template" type="xs:boolean" minOccurs="0"/>
            <xs:element name="meta-inf-tld-sources" type="xs:string" minOccurs="0"/>
            <xs:element name="classpath-tlds" type="xs:string" minOccurs="0"/>
            <xs:element name="settings" type="settingsType" minOccurs="0"/>
        </xs:all>
        <xs:attribute name="class" type="xs:string" use="required"/>
    </xs:complexType>

    <xs:complexType name="resourceProviderType">
        <xs:attribute type="xs:string" name="class" use="required"/>
    </xs:complexType>

    <xs:complexType name="configType">
        <xs:sequence>
            <xs:element name="charset" type="xs:string"/>
            <xs:element name="view-type-default" type="xs:string"/>
            <xs:element name="jsp-renderer" type="jspRendererType"/>
            <xs:element name="freemarker-renderer" type="freemarkerRendererType"/>
            <xs:element name="resource-provider" type="resourceProviderType"/>
        </xs:sequence>
    </xs:complexType>

    <xs:element name="webop">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="config" type="configType"/>
                <xs:element name="interceptor" type="interceptorType"/>
                <xs:element name="operation" type="operationType"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>

</xs:schema>
